openapi: 3.0.0
info:
  description: OpenAPI for GotCaked Server
  version: "0.0.1"
  title: GotCaked API
tags:
  - name: Status
    description: status requests
  - name: recipes
    description: recipe based requests
servers:
  - url: 'https://gotcaked.eu/api'
    description: production
  - url: 'http://127.0.0.1:3000/api'
    description: development
paths:
  /:
    get:
      description: Returns a welcome message.
      summary: Welcome message.
      tags:
        - "Status"
      responses:
        '200':
          description: Welcome message.
          content:
            application/json: 
              schema:
                type: object
                properties:
                  message:
                    type: string
                  version:
                    type: string
                example:
                  message: Welcome to our backend!
                  version: v0.0.1
  /recipes:
    get:
      description: |
        Simply returns every single existing recipe.
      summary: Retrieves list of all recipes
      tags:
        - "recipes"
      parameters:
        - in: query
          name: limit
          required: false
          description: Limit
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: offset
          required: false
          description: Offset
          schema:
            type: integer
            format: int32
            minimum: 0
      responses:
        '200':
          description: List of recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
  /users:
    get:
      description: |
        Simply returns every single existing user.
      tags:
        - "user"
      responses:
        '200':
          description: List all user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      description: |
        Simply returns every single existing user.
      summary: Aggg
      tags:
        - "user"
      responses:
        '200':
          description: Get specific user.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/User'
components:
  schemas:
    Status:
      type: object
      required:
        - version 
        - userCount
        - recipeCount
        - commentsCount
      properties:
        version:
          type: string
        userCount:
          type: integer
        recipeCount:
          type: integer
        commentsCount:
          type: integer
    User:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: User123
    Recipe:
      type: object
      required: 
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Best cake.
        description:
          type: string
          example: The best cake recipe from my grandma!
        ingredients:
          type: string
          example: 2 Apples
        preparation:
          type: string
          example: Go to the Kitchen...
        raiting:
          type: string
          example: 5 Up, 2 Down
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        category:
          type: object
          $ref: '#/components/schemas/Category'
    Comment:
      type: object
      required:
        - id
        - text
        - time
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        text:
          type: string
          example: Much wow, such cake.
        time:
          type: string
          format: date
    Tag:
      type: object
      required:
        - id
        - name
        - description
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: vegan
        description:
          type: string
          example: Does not contain any meat, dairy products, eggs, honey, or any product derived from an animal.
    Category:
      type: object
      required:
        - id
        - name
        - description
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Cake
        description:
          type: string
          example: Just cake
